####################################################################################
# 系统配置
####################################################################################
system:
  # 监听配置
  listen:
    # 监听地址，服务绑定 IP 地址，服务启动时可以使用 --host 参数覆盖该值
    host: 0.0.0.0
    # 监听端口，推荐使用 3000-65535 之间的端口，服务启动时可以使用 --port 参数覆盖该值
    port: 12345
  # 节点角色说明（一个集群中每个角色至少要有一个节点设置为 true）：
  # 1. web-server：Web 后端服务角色，为前端服务提供后端接口支持，否则前端服务无法正常工作
  # 2. leader-election：允许竞选 Leader，Leader 节点负责同步任务到任务通道，如果没有 Leader，则没有任务提供给 Worker 节点执行
  # 3. worker：允许成为 Worker，Worker 节点负责执行任务通道中的任务
  role:
    # 是否是 WebServer 角色，服务启动时可以使用 --web-server 参数指定是否开启
    web-server: true
    # 是否允许竞选 Leader，服务启动时可以使用 --leader-election 参数指定是否开启
    leader-election: false
    # 是否允许成为 Worker，服务启动时可以使用 --worker 参数指定是否开启
    worker: false
####################################################################################
# 日志配置
####################################################################################
log:
  system:
    # 是否开启系统日志，可选值：true、false
    enabled: true
    # 日志级别，可选值：debug、info、warn、error、panic、fatal
    level: debug
    # 日志输出格式，可选值：json、text
    format: text
    # 日志输出路径前缀
    path-prefix: logs/stellar-system
    # 是否切割
    rolling:
      # 是否开启切割
      enabled: true
      # 日志文件最大大小，单位：MB
      max-size: 100
      # 日志文件最大数量
      max-backups: 10
      # 日志文件最大保留天数
      max-age: 30
      # 是否压缩
      compress: true
  access:
    # 是否开启访问日志，可选值：true、false
    enabled: true
    # 日志级别，可选值：debug、info、warn、error、panic、fatal
    level: debug
    # 日志输出格式，可选值：json、text
    format: json
    # 日志输出路径前缀
    path-prefix: logs/stellar-access
    # 是否切割
    rolling:
      # 是否开启切割
      enabled: true
      # 日志文件最大大小，单位：MB
      max-size: 100
      # 日志文件最大数量
      max-backups: 10
      # 日志文件最大保留天数
      max-age: 30
      # 是否压缩
      compress: true
####################################################################################
# MySQL 数据库
####################################################################################
mysql:
  # 主机地址
  host: 127.0.0.1
  # 端口
  port: 13306
  # 数据库
  database: stellar
  # 用户名
  username: root
  # 密码
  password: 123456
  # 超时时间，单位毫秒
  timeout: 1000
  # 连接参数
  params: charset=utf8mb4&collation=utf8mb4_bin&parseTime=True&loc=Local
  # 最大打开链接数
  max-open-conns: 100
  # 最大空闲连接数
  max-idle-conns: 10
  # 空闲连接最大超时时间，单位分钟
  max-idle-time: 30
####################################################################################
# Redis 配置
####################################################################################
redis:
  # 主机地址
  host: 127.0.0.1
  # 端口
  port: 16379
  # 数据库
  database: 0
  # 密码，没有就不设置
  password: 123456
  # 连接超时时间，单位秒
  timeout: 5
  # 最大连接数，一般比 CPU 核数 4 倍少一点
  max-open-conns: 12
  # 最小空闲连接
  min-idle-conns: 5
  # 最大空闲连接
  max-idle-conns: 10
  # 最大空闲时长，单位分钟
  max-idle-time: 10
####################################################################################
# 用户认证相关配置
####################################################################################
auth:
  # JWT 配置
  jwt:
    # 领域，用于区分不同的认证范围
    realm: stellar
    # 用于签名和验证 JWT 令牌的密钥
    # 一般是一个随机生成的字符串，在中间件生成 JWT 令牌时，会使用这个密钥对令牌进行签名
    key: SNXAMIAOBABUn9IUX3SA7h06f72H8
    # Token 超时时间，单位秒，默认 1 天，Redis 中有效期也是如此
    timeout: 86400
  # 登录相关配置
  login:
    # 登录错误次数上限
    error-limit: 5
    # 登录错误次数超限后，锁定时间，单位秒，默认 5 分钟
    error-lock-time: 300
    # 是否允许多设备同时登录
    multi-device: false